name: OCI Image

on:
  workflow_call:
    inputs:
      publish:
        type: boolean
        required: true
      tags:
        type: string
        required: true

jobs:
  build:
    name: ${{ inputs.publish && 'build and publish' || 'build' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      attestations: write
      packages: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true
          filter: tree:0

      - name: Compute the image namespace and registry
        id: namespace
        run: >-
          echo "image=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          && echo "registry=ghcr.io/$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.namespace.outputs.image }}
          labels: |
            org.opencontainers.image.created={{commit_date 'YYYY-MM-DDTHH:mm:ss.SSS[Z]'}}
            org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}
          tags: ${{ inputs.tags }}

      - name: Compute the timestamp for the image build
        id: timestamp
        run: echo "timestamp=$(git log -1 --pretty=%ct ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }})" >> $GITHUB_OUTPUT

      - name: Build container image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          platforms: linux/amd64, linux/arm64
          containerfiles: Containerfile
          oci: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          extra-args: |
            --timestamp=${{ steps.timestamp.outputs.timestamp }}

      - name: Log in to ghcr
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ${{ steps.namespace.outputs.registry }}
        if: ${{ inputs.publish }}

      - name: Push images
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ${{ steps.build.outputs.tags }}
        if: ${{ inputs.publish }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ steps.namespace.outputs.image }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
        if: ${{ inputs.publish }}
