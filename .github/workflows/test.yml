name: Test

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: stable

      - name: Generate code
        run: go generate ./...

      - name: Run benchmarks for proxy
        run: go test -benchtime=10x -benchmem -run=^$ -bench=^.*$ ./internal/handlers/proxy | tee benchmark_proxy.txt

      - name: Generate summary
        run: |
          cat << EOF >> $GITHUB_STEP_SUMMARY
          ## Benchmarks

          \`\`\`
          $(cat benchmark_proxy.txt)
          \`\`\`
          EOF

      - uses: actions/upload-artifact@v5
        with:
          name: benchmarks
          path: benchmark_proxy.txt
          if-no-files-found: error

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: stable

      - name: Download gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Generate code
        run: go generate ./...

      - name: Run tests
        run: gotestsum --hide-summary=all --junitfile=junit.xml --format=testname -- -race -coverpkg=./... -coverprofile .coverage ./...

      - name: Remove ascii colors from junit report
        if: ${{ !cancelled() }}
        run: sed -e 's/\xEF\xBF\xBD//g' -e 's/\[[0-9;]*[[:alpha:]]//g' -i junit.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ !cancelled() }}
        with:
          files: .coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v6
        with:
          go-version: stable

      - name: Generate code
        run: go generate ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5

  gopls:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v6
        with:
          go-version: stable

      - name: Install gopls
        run: go install golang.org/x/tools/gopls@latest

      - name: Generate code
        run: go generate ./...

      - name: Run gopls
        run: make gopls-check
